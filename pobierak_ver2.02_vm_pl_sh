#!/bin/bash

# EXIT hot-key ctr+c

trap 'exit 0' INT
user_comp="$( whoami  )"

usb_mount="$(lsblk | grep /media | grep -oP "sd[a-z][0-9]?" | awk '{print "/dev/"$1}')"
usb_media="$(awk -v needle=$usb_mount '$1==needle {print $2}' /proc/mounts)"

usb_check(){
if [ -z "$usb_media" ]
then
      echo -e "${RED}${bold} !!!! ZEWNETRZNY USB NIE JEST ZAMONTOWANY W VIRTUALCE :((( !!!! ${normal}${NC}"
else
      echo -e "${GREEN}${bold} ZEWNETRZNY USB JEST PRAWIDLOWO ZAMONTOWANY W WIRTUALCE ;) ${normal}${NC} "
fi
}

bold=$(tput bold)
normal=$(tput sgr0)
#${bold}
#${normal}
CYAN='\033[1;36m'	# cyan text
RED='\033[1;31m'	# red text
NC='\033[0m'		# white text
PURPLE='\033[1;35m'	# Light Purple
BLUE='\033[1;34m'	# BLUE
GREEN='\033[1;32m'
#${RED}
#${NC}
#${PURPLE}
#${BLUE}
#${GREEN}
#${CYAN}
youtube_dl_update(){

	sudo youtube-dl -U
}

download_from_list(){
    echo ""
	usb_mount="$(lsblk | grep /media | grep -oP "sd[a-z][0-9]?" | awk '{print "/dev/"$1}')"
	usb_media="$(awk -v needle=$usb_mount '$1==needle {print $2}' /proc/mounts)"
	sleep 0.5

    read -p "Podaj folder w jakim ma byc zachowana playlista na dysku zewnetrznym: " dir
    mkdir_on_usb="$( echo $usb_media/$dir   )"
	mkdir $mkdir_on_usb
	space_left="$( df -BM | grep "$usb_mount" | awk '{print $4}')"
	sleep 0.5
	echo ""
	read -p "NA DYSKU USB POZOSTALO: $space_left . Kontynuowac ? Y/N " -n 1 -r
		echo    # (optional) move to a new line
		if [[ $REPLY =~ ^[Yy]$ ]]
		 then
	        xdg-open $mkdir_on_usb
	        echo ""
            echo -e " ${PURPLE} MP3 file is saved under: $mkdir_on_usb  ${NC} "
            echo ""
            read -p "PODAJ SCIEZKE DO PLIKU Z LISTA PIOSENEK: " plik_1
            plik_string=$( echo  $plik_1 |  sed 's/"//g' |  sed s/\'//g )
            sleep 0.5
            xdg-open $dir_target
            for s in $( cat $plik_string )  ;
            do
                youtube-dl --ignore-errors --format bestaudio --extract-audio --audio-format mp3 --audio-quality 320K --output $dir_target/"%(title)s.%(ext)s"  "$s"
            done
        else
		 echo "Moze inny dysk ?"
		fi

}


download_song(){
touch /tmp/site.txt
	while [ 1 ];
	do
	mp3_list=$( cat /tmp/site.txt)
	read -p "PODAJ CALY ADRES. ABY PRZERWAC WPISZ q I ENTER: " var
	if [ "$var" == "q" ];
	then
	 rm   /tmp/site.txt
	 break;
	else
	 echo "$var" >> /tmp/site.txt
	fi
	done
	echo ""
	# echo -e " ${PURPLE} MP3 file is saved under: /home/$user_comp/  ${NC} "
	echo ""
	pu_desk=$(cd /home/$user_comp/ | grep "Pulpit"  )
	if [ -z "$pu_desk" ]
	then
      	 xdg-open /home/$user_comp/Desktop
	else
     	 xdg-open /home/$user_comp/Pulpit
	fi
	for site in ${mp3_list[@]}
	 do
	  youtube-dl --ignore-errors --format bestaudio --extract-audio --audio-format mp3 --audio-quality 320K --output "%(title)s.%(ext)s"  "$site"
	done
}

download_playlist(){
	echo ""
	usb_mount="$(lsblk | grep /media | grep -oP "sd[a-z][0-9]?" | awk '{print "/dev/"$1}')"
	usb_media="$(awk -v needle=$usb_mount '$1==needle {print $2}' /proc/mounts)"
	sleep 0.5
	echo -e " Czesc linku gdzie znajduje sie ID jest na zielono https://www.youtube.com/watch?v=${GREEN}PLqZ1p_phwlET5wMTGS_leNTArf1S8uKxA&index=6 ${NC}"
 	sleep 0.5
	read -p "PODAJ ID LINKU : " playlist_id
        sleep 0.5
	echo ""
	read -p "Podaj folder w jakim ma byc zachowana PLAYLISTA na dysku zewnetrznym: " dir
	mkdir_on_usb="$( echo $usb_media/$dir   )"
	mkdir $mkdir_on_usb
	space_left="$( df -BM | grep "$usb_mount" | awk '{print $4}')"
	sleep 0.5
	echo ""
	read -p "NA DYSKU USB POZOSTALO: $space_left . Kontynuowac ? Y/N " -n 1 -r
		echo    # (optional) move to a new line
		if [[ $REPLY =~ ^[Yy]$ ]]
		 then
	xdg-open $mkdir_on_usb
	echo ""
        echo -e " ${PURPLE} MP3 file is saved under: $mkdir_on_usb  ${NC} "
        echo ""
        youtube-dl --ignore-errors --format bestaudio --extract-audio --audio-format mp3 --audio-quality 320K --yes-playlist  --output $mkdir_on_usb/"%(title)s.%(ext)s"  "$playlist_id"
		else
		 echo "Moze inny dysk ?"
		fi
}

download_channel(){
	echo ""
	usb_mount2="$(lsblk | grep /media | grep -oP "sd[a-z][0-9]?" | awk '{print "/dev/"$1}')"
    usb_media2="$(awk -v needle=$usb_mount2 '$1==needle {print $2}' /proc/mounts)"
    echo -e " PODAJ CALY LINK DO KANALU YOUTUBE np. ${GREEN} https://www.youtube.com/${BLUE}channel/${GREEN}UC3y2xUIWYTs0IGmzefQLI0w ${NC}"
    sleep 0.5
	echo ""
    read -p "PODAJ ID LINKU : " channel_id
    sleep 0.5
	echo ""
        read -p "Podaj folder w jakim ma byc zachowany CHANNEL na dysku zewnetrznym: " dir
        mkdir_on_usb_2="$( echo $usb_media2/$dir   )"
        mkdir $mkdir_on_usb_2
        space_left_2="$( df -BM | grep "$usb_mount2" | awk '{print $4}')"
        sleep 0.5
	echo ""
        read -p "NA DYSKU USB POZOSTALO: $space_left_2 . Kontynuowac ? Y/N " -n 1 -r
                echo
                if [[ $REPLY =~ ^[Yy]$ ]]
                 then
        xdg-open $mkdir_on_usb_2
        echo ""
        echo -e " ${PURPLE} MP3 file is saved under: $mkdir_on_usb_2  ${NC} "
        echo ""
	youtube-dl -f best -ciw --extract-audio --audio-format mp3 --audio-quality 320K -o  $mkdir_on_usb_2/"%(title)s.%(ext)s" -v "$channel_id"
	else
	  echo "MOZE INNY DYSK ?"
	fi

}
upgrade_ytdl(){
	sudo apt install ffmpeg -y
 	sudo apt install avconv -y
	sudo apt-get install  libav-tools -y

}
install_ytdl(){
	sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl
	sudo chmod a+rx /usr/local/bin/youtube-dl
    sudo apt-get install python-is-python3
}
install_tor(){

	sudo add-apt-repository ppa:micahflee/ppa -y
	sudo apt update
	sudo apt install torbrowser-launcher -y
	sudo apt install deluge -y

}
download_movie(){
touch /tmp/site_mov.txt
while [ 1 ];
        do
	mov_list=$( cat /tmp/site_mov.txt)
        read -p "PODAJ CALY ADRES. ABY PRZERWAC WPISZ q I ENTER: " mov
        if [ "$mov" == "q" ];
        then
         rm   /tmp/site_mov.txt
         break;
        else
	 echo "$mov" >> /tmp/site_mov.txt
        fi
        done
        echo ""
        echo ""
        pu_desk=$(cd /home/$user_comp/ | grep "Pulpit"  )
        if [ -z "$pu_desk" ]
        then
         xdg-open /home/$user_comp/Desktop
        else
         xdg-open /home/$user_comp/Pulpit
        fi
        for site_mov in ${mov_list[@]}
         do
          youtube-dl --ignore-errors -f bestvideo+bestaudio/best --output "%(title)s.%(ext)s"  "$site_mov"
        done

}

wpis_bash(){

read -p "PODAJ SCIEZKE DO PLIKU: " plik
plik_zr=$( echo  $plik |  sed 's/"//g' |  sed s/\'//g )
skrypt=$( ls /home/$user_comp/ | grep "SKRYPTY" )
dest=$(echo "/home/"$user_comp"/SKRYPTY/pobierak.sh")
if [ -z "$skrypt" ]
	then
      	 mkdir /home/$user_comp/SKRYPTY
	else
         echo ""
fi

cp $plik_zr $dest
sudo sed -i.bak '/pobierak/d' ~/.bashrc
sudo echo "alias pobierak='/home/$user_comp/SKRYPTY/pobierak.sh'" >> ~/.bashrc
echo -e "OD TERAZ MOZESZ UZYC KOMENDY ${RED}${u}pobierak${NC} BASH BEZPOSREDIO W TERMINALU"
sleep 5
exec bash
exit
}
###############################
#7.        PRINT MENU         #
###############################
u='\e[4m'

printMenu(){
	clear && printf '\e[3J'
	echo ""
	usb_check
	echo ""
    echo -e "${normal} ${u}Pobierak_ver2.02${NC}"
	echo ""
	echo -e	"${PURPLE}	\t1)	SCIAGNIJ ILE CHCESZ POJEDYNCZYCH LINKOW ${NC}"
    echo ""
    echo -e "${BLUE}	\t2)	SCIAGNIJ PIOSENKI Z LINKOW ZNAJDUJACYCH SIE W PLIKU ${NC}"
	echo ""
	echo -e	"${PURPLE}	\t3)	SCIAGNIJ CALA PLAYLISTE ${NC}"
	echo ""
	echo -e "${BLUE}	\t4)	SCIAGNIJ CALY KANAL ${NC}"
	echo ""
	echo -e "${PURPLE}	\t5)	SCIAGNIJ FILM ${NC}"
	echo ""
	echo -e "${CYAN} 	\t6)	INSTALACJA YOUTUBE_DL ${NC}"
	echo ""
	echo -e "${CYAN}	\t7)	UPGRADE BIBLIOTEK DO KONWERTOWANIA ${NC}"
	echo ""
    echo -e "${CYAN}        \t8)      INSTALUJ POBIERAKA W KONSOLI  ${NC}"
    echo ""
    echo -e "${CYAN} 	\t9)	YOUTUBE-DL UPDATE ${NC}"
    echo ""
    echo -e "${CYAN} 	\t10)	INSTALL TOR AND DELUGE ${NC}"
	echo ""
	echo -e "           \t11)   EXIT"
    echo ""

	echo ""
	read option;

	while [[ $option -gt 11 || ! $(echo $option ) ]] # | grep '^[1-9]$') ]]
	do
		printMenu

	done
	runOption
}
#############################
#8.	RUN OPTION	    #
#############################
runOption(){
	case $option in
		1) download_song;;
        2) download_from_list;;
		3) download_playlist;;
		4) download_channel;;
		5) download_movie;;
        6) install_ytdl;;
		7) upgrade_ytdl;;
		8) wpis_bash;;
		9) youtube_dl_update;;
        10) install_tor;;
		11) exit;;
        
		
	esac
	echo "Press any Key to continue"
	read x
	printMenu
}
while true ;
do
	printMenu
done
